 int fd;
    char *line;
    int ret;
    int i;

    fd = open(str, O_RDONLY);
    if (fd == -1)
    {
        print_error("Error: open failed\n");
        return (1);
    }
    while ((ret = get_next_line(fd, &line)) > 0)
    {
        i = 0;
        while (line[i] == ' ')
            i++;
        if (line[i] == 'R')
            parse_resolution(line, map);
        else if (line[i] == 'N' && line[i + 1] == 'O')
            parse_texture(line, map, 0);
        else if (line[i] == 'S' && line[i + 1] == 'O')
            parse_texture(line, map, 1);
        else if (line[i] == 'W' && line[i + 1] == 'E')
            parse_texture(line, map, 2);
        else if (line[i] == 'E' && line[i + 1] == 'A')
            parse_texture(line, map, 3);
        else if (line[i] == 'S' && line[i + 1] == ' ')
            parse_texture(line, map, 4);
        else if (line[i] == 'F')
            parse_color(line, map, 0);
        else if (line[i] == 'C')
            parse_color(line, map, 1);
        else if (line[i] == '\0')
            continue;
        else
        {
            print_error("Error: invalid line\n");
            return (1);
        }
        free(line);
    }
    if (ret == -1)
    {
        print_error("Error: get_next_line failed\n");
        return (1);
    }







     while (line = get_next_line(fd))
    {
        i = 0;
        while (line[i] == ' ')
            i++;
        if (line[i] == 'R')
            parse_resolution(line, map);
        else if (line[i] == 'N' && line[i + 1] == 'O')
            parse_texture(line, &map->no);
        else if (line[i] == 'S' && line[i + 1] == 'O')
            parse_texture(line, &map->so);
        else if (line[i] == 'W' && line[i + 1] == 'E')
            parse_texture(line, &map->we);
        else if (line[i] == 'E' && line[i + 1] == 'A')
            parse_texture(line, &map->ea);
        // else if (line[i] == 'S' && line[i + 1] == ' ')
        //     parse_texture(line, &map->s);
        else if (line[i] == 'F')
            parse_color(line, &map->f);
        else if (line[i] == 'C')
            parse_color(line, &map->c);
        else if (line[i] == '\0')
            continue;
        else
        {
            print_error("Error: invalid line\n");
            return (1);
        }
        free(line);
    }